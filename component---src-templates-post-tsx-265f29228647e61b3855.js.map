{"version":3,"file":"component---src-templates-post-tsx-265f29228647e61b3855.js","mappings":"0MAeA,MATyD,YAAqB,IAAX,KAAEA,GAAM,EACzE,OACEC,EAAAA,cAAAA,MAAAA,CACEC,UAAU,sBACVC,wBAAyB,CAAEC,OAAQJ,IAGzC,ECqDA,MArC2D,SAAU,GAQlE,IAPDK,MACEC,MACEC,cAAc,SAAEC,IAElBC,mBAAmB,MAAEC,IAEvBC,UAAU,KAAEC,IACb,EACC,MACEC,MAAM,KACJb,EACAc,aAAa,MAAEC,EAAK,QAAEC,EAAO,KAAEC,KAE/BP,EAAM,GAEV,OACET,EAAAA,cAACiB,EAAAA,EAAQ,CACPH,MAAOA,EACPI,YAAaH,EACbI,QAASR,EACTJ,SAAUA,GAEVP,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qDACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,4BAA4Ba,GAC1Cd,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,wEACbD,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,eAAc,gBAChCD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,QAAQe,KAG5BhB,EAAAA,cAACoB,EAAW,CAACrB,KAAMA,KAI3B,C","sources":["webpack://gatsby-starter-default/./src/components/post/PostContent.tsx","webpack://gatsby-starter-default/./src/templates/post.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\r\n\r\ninterface PostContentProps {\r\n  html: string;\r\n}\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\r\n  return (\r\n    <div\r\n      className=\"mt-10 markdown-body\"\r\n      dangerouslySetInnerHTML={{ __html: html }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PostContent;\r\n","import React, { FunctionComponent } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Template from 'components/common/Template';\r\nimport PostContent from 'components/post/PostContent';\r\nimport { PostFrontmatterType } from 'types/PostItem.types';\r\n\r\nexport type PostPageItemType = {\r\n  node: {\r\n    html: string;\r\n    frontmatter: PostFrontmatterType;\r\n  };\r\n};\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        imageUrl: string;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[];\r\n    };\r\n  };\r\n  location: {\r\n    href: string;\r\n  };\r\n};\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data: {\r\n    site: {\r\n      siteMetadata: { imageUrl },\r\n    },\r\n    allMarkdownRemark: { edges },\r\n  },\r\n  location: { href },\r\n}) {\r\n  const {\r\n    node: {\r\n      html,\r\n      frontmatter: { title, summary, date },\r\n    },\r\n  } = edges[0];\r\n\r\n  return (\r\n    <Template\r\n      title={title}\r\n      description={summary}\r\n      siteUrl={href}\r\n      imageUrl={imageUrl}\r\n    >\r\n      <div className=\"p-4 lg:p-10\">\r\n        <div className=\"pb-2 border-b-2 border-light__bar dark:border-bar\">\r\n          <h2 className=\"mt-10 text-3xl font-bold\">{title}</h2>\r\n          <div className=\"mt-4 mb-2 flex space-x-2 divide-x  divide-light__bar dark:divide-bar\">\r\n            <strong className=\"font-normal\">ubububububub</strong>\r\n            <time className=\"pl-2\">{date}</time>\r\n          </div>\r\n        </div>\r\n        <PostContent html={html} />\r\n      </div>\r\n    </Template>\r\n  );\r\n};\r\n\r\nexport default PostTemplate;\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    site {\r\n      siteMetadata {\r\n        imageUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["html","React","className","dangerouslySetInnerHTML","__html","data","site","siteMetadata","imageUrl","allMarkdownRemark","edges","location","href","node","frontmatter","title","summary","date","Template","description","siteUrl","PostContent"],"sourceRoot":""}